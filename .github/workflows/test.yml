name: Multi-Platform Test Suite

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday
  workflow_dispatch:
    inputs:
      node_version:
        description: 'Node.js version to test (optional - runs all by default)'
        required: false
        type: choice
        options:
          - 'all'
          - '20.x'
          - '22.x'
          - '24.x'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 3

  test:
    name: Test - ${{ matrix.platform }} - Node ${{ matrix.node }}
    needs: build
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write
      deployments: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux - GitHub-hosted runners
          - platform: Linux
            runner: ubuntu-22.04
            node: '20.x'
          - platform: Linux
            runner: ubuntu-22.04
            node: '22.x'
          - platform: Linux
            runner: ubuntu-22.04
            node: '24.x'

          # Windows - Self-hosted runners
          - platform: Windows
            runner: [self-hosted, windows, x64]
            node: '20.x'
          - platform: Windows
            runner: [self-hosted, windows, x64]
            node: '22.x'
          - platform: Windows
            runner: [self-hosted, windows, x64]
            node: '24.x'

          # macOS Intel - Self-hosted runners
          - platform: macOS-Intel
            runner: [self-hosted, macos, x64]
            node: '20.x'
          - platform: macOS-Intel
            runner: [self-hosted, macos, x64]
            node: '22.x'
          - platform: macOS-Intel
            runner: [self-hosted, macos, x64]
            node: '24.x'

          # macOS Apple Silicon - Self-hosted runners
          - platform: macOS-ARM
            runner: [self-hosted, macos, arm64]
            node: '20.x'
          - platform: macOS-ARM
            runner: [self-hosted, macos, arm64]
            node: '22.x'
          - platform: macOS-ARM
            runner: [self-hosted, macos, arm64]
            node: '24.x'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean workspace (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          # Remove node_modules and package-lock to ensure clean install
          if (Test-Path node_modules) { Remove-Item -Recurse -Force node_modules }
          if (Test-Path package-lock.json) { Remove-Item -Force package-lock.json }
          # Clear npm cache
          npm cache clean --force

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Display system information (Windows)
        if: runner.os == 'Windows'
        # Assumes PowerShell is the default shell on Windows self-hosted runners.
        # If PowerShell Core is used, use 'pwsh' instead of 'powershell'.
        shell: powershell
        run: |
          "### System Information" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "- **Platform**: ${{ matrix.platform }}" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "- **Runner**: ${{ runner.name }}" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "- **Node.js**: $(node --version)" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "- **npm**: $(npm --version)" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "- **OS**: Windows" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          "- **Architecture**: x64" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

      - name: Display system information (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          echo "### System Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runner**: ${{ runner.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Node.js**: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- **npm**: $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "- **OS**: $(uname -s)" >> $GITHUB_STEP_SUMMARY
          echo "- **Architecture**: $(uname -m)" >> $GITHUB_STEP_SUMMARY

      - name: Install dependencies
        run: npm ci

      - name: Verify installation (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Write-Host "Checking for tsup installation..."
          if (Test-Path "node_modules\.bin\tsup.cmd") {
            Write-Host "✓ tsup found in node_modules"
          } else {
            Write-Host "✗ tsup NOT found - reinstalling..."
            npm install
          }

      - name: Build project
        run: npm run build

      - name: Run tests with coverage
        run: npm test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/coverage-final.json
          flags: ${{ matrix.platform }}-node${{ matrix.node }}
          name: codecov-${{ matrix.platform }}-node${{ matrix.node }}
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.platform }}-node${{ matrix.node }}
          path: |
            coverage/
            test-results/
          retention-days: 30

      - name: Run benchmarks
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: npm run bench:ci

      - name: Upload benchmark results as artifact
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-${{ matrix.platform }}-node${{ matrix.node }}
          path: benchmark-results.json
          retention-days: 30

  create-benchmark-index:
    name: Create Benchmark Overview Page
    runs-on: ubuntu-22.04
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Create overview index.html
        run: |
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>qvd4js Benchmark Results</title>
              <style>
                  * {
                      margin: 0;
                      padding: 0;
                      box-sizing: border-box;
                  }
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                      line-height: 1.6;
                      color: #333;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      min-height: 100vh;
                      padding: 2rem;
                  }
                  .container {
                      max-width: 1200px;
                      margin: 0 auto;
                      background: white;
                      border-radius: 12px;
                      box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                      overflow: hidden;
                  }
                  .header {
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      padding: 3rem 2rem;
                      text-align: center;
                  }
                  .header h1 {
                      font-size: 2.5rem;
                      margin-bottom: 0.5rem;
                      font-weight: 700;
                  }
                  .header p {
                      font-size: 1.1rem;
                      opacity: 0.95;
                  }
                  .content {
                      padding: 2rem;
                  }
                  .intro {
                      background: #f8f9fa;
                      padding: 1.5rem;
                      border-radius: 8px;
                      margin-bottom: 2rem;
                      border-left: 4px solid #667eea;
                  }
                  .intro p {
                      margin-bottom: 0.5rem;
                  }
                  .grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                      gap: 1.5rem;
                      margin-bottom: 2rem;
                  }
                  .card {
                      background: white;
                      border: 2px solid #e9ecef;
                      border-radius: 8px;
                      padding: 1.5rem;
                      transition: all 0.3s ease;
                      text-decoration: none;
                      color: inherit;
                      display: block;
                  }
                  .card:hover {
                      transform: translateY(-5px);
                      box-shadow: 0 10px 25px rgba(102, 126, 234, 0.2);
                      border-color: #667eea;
                  }
                  .card h3 {
                      color: #667eea;
                      font-size: 1.25rem;
                      margin-bottom: 0.5rem;
                      font-weight: 600;
                  }
                  .card .platform {
                      display: inline-block;
                      background: #667eea;
                      color: white;
                      padding: 0.25rem 0.75rem;
                      border-radius: 4px;
                      font-size: 0.85rem;
                      font-weight: 500;
                      margin-bottom: 0.5rem;
                  }
                  .card .node-version {
                      color: #6c757d;
                      font-size: 0.95rem;
                  }
                  .footer {
                      text-align: center;
                      padding: 2rem;
                      color: #6c757d;
                      border-top: 1px solid #e9ecef;
                  }
                  .footer a {
                      color: #667eea;
                      text-decoration: none;
                      font-weight: 500;
                  }
                  .footer a:hover {
                      text-decoration: underline;
                  }
                  .timestamp {
                      color: #6c757d;
                      font-size: 0.9rem;
                      text-align: center;
                      margin-bottom: 2rem;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>📊 qvd4js Benchmark Results</h1>
                      <p>Performance benchmarks across multiple platforms and Node.js versions</p>
                  </div>
                  <div class="content">
                      <div class="intro">
                          <p><strong>Welcome to the qvd4js benchmark dashboard!</strong></p>
                          <p>This page provides an overview of performance benchmarks for the qvd4js library, tested across different operating systems and Node.js versions. Click on any card below to view detailed benchmark results for that specific configuration.</p>
                      </div>
                      <div class="timestamp">
                          Last updated: <strong id="update-time"></strong>
                      </div>
                      <div class="grid" id="benchmark-grid">
                          <!-- Benchmark cards will be inserted here -->
                      </div>
                  </div>
                  <div class="footer">
                      <p>Generated automatically by GitHub Actions | <a href="https://github.com/ptarmiganlabs/qvd4js" target="_blank">View Repository</a></p>
                  </div>
              </div>
              <script>
                  // Set the update timestamp
                  document.getElementById('update-time').textContent = new Date().toLocaleString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                      hour: '2-digit',
                      minute: '2-digit',
                      timeZoneName: 'short'
                  });

                  // Define all benchmark configurations
                  const benchmarks = [
                      { platform: 'Linux', node: '20.x', icon: '🐧' },
                      { platform: 'Linux', node: '22.x', icon: '🐧' },
                      { platform: 'Linux', node: '24.x', icon: '🐧' },
                      { platform: 'Windows', node: '20.x', icon: '🪟' },
                      { platform: 'Windows', node: '22.x', icon: '🪟' },
                      { platform: 'Windows', node: '24.x', icon: '🪟' },
                      { platform: 'macOS-Intel', node: '20.x', icon: '🍎' },
                      { platform: 'macOS-Intel', node: '22.x', icon: '🍎' },
                      { platform: 'macOS-Intel', node: '24.x', icon: '🍎' },
                      { platform: 'macOS-ARM', node: '20.x', icon: '🍎' },
                      { platform: 'macOS-ARM', node: '22.x', icon: '🍎' },
                      { platform: 'macOS-ARM', node: '24.x', icon: '🍎' }
                  ];

                  // Create cards for each benchmark
                  const grid = document.getElementById('benchmark-grid');
                  benchmarks.forEach(bench => {
                      const card = document.createElement('a');
                      card.className = 'card';
                      card.href = `benchmarks/${bench.platform}-node${bench.node}/index.html`;
                      card.target = '_blank';
                      card.rel = 'noopener noreferrer';
                      
                      card.innerHTML = `
                          <h3>${bench.icon} ${bench.platform}</h3>
                          <span class="platform">${bench.platform}</span>
                          <p class="node-version">Node.js ${bench.node}</p>
                      `;
                      
                      grid.appendChild(card);
                  });
              </script>
          </body>
          </html>
          EOF

      - name: Commit and push index.html
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add index.html
          git diff --staged --quiet || git commit -m "Update benchmark overview page"
          git push

  publish-benchmarks:
    name: Publish Benchmarks to GitHub Pages
    runs-on: ubuntu-22.04
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      deployments: write
    strategy:
      max-parallel: 1
      matrix:
        config:
          - { platform: 'Linux', node: '20.x' }
          - { platform: 'Linux', node: '22.x' }
          - { platform: 'Linux', node: '24.x' }
          - { platform: 'Windows', node: '20.x' }
          - { platform: 'Windows', node: '22.x' }
          - { platform: 'Windows', node: '24.x' }
          - { platform: 'macOS-Intel', node: '20.x' }
          - { platform: 'macOS-Intel', node: '22.x' }
          - { platform: 'macOS-Intel', node: '24.x' }
          - { platform: 'macOS-ARM', node: '20.x' }
          - { platform: 'macOS-ARM', node: '22.x' }
          - { platform: 'macOS-ARM', node: '24.x' }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download benchmark artifact
        uses: actions/download-artifact@v4
        with:
          name: benchmark-${{ matrix.config.platform }}-node${{ matrix.config.node }}
          path: .

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: qvd4js Benchmark - ${{ matrix.config.platform }} - Node ${{ matrix.config.node }}
          tool: 'customBiggerIsBetter'
          output-file-path: benchmark-results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: benchmarks/${{ matrix.config.platform }}-node${{ matrix.config.node }}
          alert-threshold: '150%'
          fail-on-alert: false
          max-items-in-chart: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  summary:
    name: Test Summary
    runs-on: ubuntu-22.04
    needs: [create-benchmark-index, security-scan, publish-benchmarks]
    if: always()
    steps:
      - name: Check test results
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Create Benchmark Overview: ${{ needs.create-benchmark-index.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Security Scan: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Publish Benchmarks: ${{ needs.publish-benchmarks.result }}" >> $GITHUB_STEP_SUMMARY
