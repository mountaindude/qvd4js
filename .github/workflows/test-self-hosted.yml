name: Self-Hosted Multi-Platform Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      node_version:
        description: 'Node.js version to test'
        required: false
        default: '20.x'
        type: choice
        options:
          - '20.x'
          - '22.x'

jobs:
  test-self-hosted:
    name: ${{ matrix.platform }} - Node ${{ matrix.node }}
    runs-on: ${{ matrix.runner-label }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux self-hosted runners
          - platform: Linux
            runner-label: [self-hosted, linux, x64]
            node: '20.x'
          - platform: Linux
            runner-label: [self-hosted, linux, x64]
            node: '22.x'
          
          # Windows self-hosted runners
          - platform: Windows
            runner-label: [self-hosted, windows, x64]
            node: '20.x'
          - platform: Windows
            runner-label: [self-hosted, windows, x64]
            node: '22.x'
          
          # macOS self-hosted runners (Intel)
          - platform: macOS-Intel
            runner-label: [self-hosted, macos, x64]
            node: '20.x'
          - platform: macOS-Intel
            runner-label: [self-hosted, macos, x64]
            node: '22.x'
          
          # macOS self-hosted runners (Apple Silicon)
          - platform: macOS-ARM
            runner-label: [self-hosted, macos, arm64]
            node: '20.x'
          - platform: macOS-ARM
            runner-label: [self-hosted, macos, arm64]
            node: '22.x'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Display system information
        shell: bash
        run: |
          echo "### System Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Node.js**: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- **npm**: $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "- **OS**: $(uname -s 2>/dev/null || echo 'Windows')" >> $GITHUB_STEP_SUMMARY
          echo "- **Architecture**: $(uname -m 2>/dev/null || echo 'x64')" >> $GITHUB_STEP_SUMMARY

      - name: Clean workspace
        shell: bash
        run: |
          npm run clean || true
          rm -rf node_modules || true

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run linting
        run: npm run lint

      - name: Run all tests with coverage
        run: npm test

      - name: Display test summary
        if: always()
        shell: bash
        run: |
          echo "### Test Results for ${{ matrix.platform }} - Node ${{ matrix.node }}" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            echo "✅ Tests completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Tests failed or coverage not generated" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.platform }}-node${{ matrix.node }}
          path: coverage/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.platform }}-node${{ matrix.node }}
          path: |
            coverage/
            test-results/
          retention-days: 30

  cross-platform-verification:
    name: Cross-Platform Verification
    needs: test-self-hosted
    runs-on: ubuntu-22.04
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Verify cross-platform results
        shell: bash
        run: |
          echo "## Cross-Platform Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Coverage Reports" >> $GITHUB_STEP_SUMMARY
          
          for dir in artifacts/coverage-*; do
            if [ -d "$dir" ]; then
              platform=$(basename "$dir" | sed 's/coverage-//')
              if [ -f "$dir/coverage-summary.json" ]; then
                echo "✅ $platform - Coverage generated" >> $GITHUB_STEP_SUMMARY
              else
                echo "❌ $platform - Coverage missing" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          done

      - name: Upload combined results
        uses: actions/upload-artifact@v4
        with:
          name: all-platform-results
          path: artifacts/
          retention-days: 90
